/**
 * Webhook Type Definition
 * Webhook event definition of the LINE Messaging API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

//go:generate python3 ../../generate-code.py
package webhook

import (
	"encoding/json"
	"fmt"
)

// Mention
// Mention

type Mention struct {

	/**
	 * Array of one or more mention objects. Max: 20 mentions (Required)
	 */
	Mentionees []MentioneeInterface `json:"mentionees"`
}

func (cr *Mention) UnmarshalJSON(data []byte) error {
	var raw map[string]json.RawMessage
	err := json.Unmarshal(data, &raw)
	if err != nil {
		return fmt.Errorf("JSON parse error in map: %w", err)
	}

	if raw["mentionees"] != nil {

		var rawmentionees []json.RawMessage
		err = json.Unmarshal(raw["mentionees"], &rawmentionees)
		if err != nil {
			return fmt.Errorf("JSON parse error in mentionees(array): %w", err)
		}

		for _, data := range rawmentionees {
			e, err := UnmarshalMentionee(data)
			if err != nil {
				return fmt.Errorf("JSON parse error in Mentionee(discriminator array): %w", err)
			}
			cr.Mentionees = append(cr.Mentionees, e)
		}

	}

	return nil
}

// MarshalJSON customizes the JSON serialization of the Mention struct.
func (r *Mention) MarshalJSON() ([]byte, error) {

	newMentionees := make([]MentioneeInterface, len(r.Mentionees))
	for i, v := range r.Mentionees {
		newMentionees[i] = setDiscriminatorPropertyMentionee(v)
	}

	type Alias Mention
	return json.Marshal(&struct {
		*Alias

		Mentionees []MentioneeInterface `json:"mentionees"`
	}{
		Alias: (*Alias)(r),

		Mentionees: newMentionees,
	})
}
