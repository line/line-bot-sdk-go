/**
 * LINE Messaging API
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

//go:generate python3 ../../generate-code.py
package messaging_api

import (
	"encoding/json"
	"fmt"
)

// CouponCreateRequest
// Request object for creating a coupon. Contains all configurable coupon properties.

type CouponCreateRequest struct {

	/**
	 * Get AcquisitionCondition
	 */
	AcquisitionCondition AcquisitionConditionRequestInterface `json:"acquisitionCondition"`

	/**
	 * URL of the barcode image associated with the coupon. Used for in-store redemption.
	 */
	BarcodeImageUrl string `json:"barcodeImageUrl,omitempty"`

	/**
	 * Unique code to be presented by the user to redeem the coupon. Optional.
	 */
	CouponCode string `json:"couponCode,omitempty"`

	/**
	 * Detailed description of the coupon. Displayed to users.
	 */
	Description string `json:"description,omitempty"`

	/**
	 * Coupon expiration time (epoch seconds). Coupon cannot be used after this time. (Required)
	 */
	EndTimestamp int64 `json:"endTimestamp"`

	/**
	 * URL of the main image representing the coupon. Displayed in the coupon list.
	 */
	ImageUrl string `json:"imageUrl,omitempty"`

	/**
	 * Maximum number of times a single coupon ticket can be used. Use -1 to indicate no limit. (Required)
	 * maximum: 1
	 */
	MaxUseCountPerTicket int32 `json:"maxUseCountPerTicket"`

	/**
	 * Coupon start time (epoch seconds). Coupon can be used from this time. (Required)
	 */
	StartTimestamp int64 `json:"startTimestamp"`

	/**
	 * Title of the coupon. Displayed in the coupon list. (Required)
	 */
	Title string `json:"title"`

	/**
	 * Conditions for using the coupon. Shown to users.
	 */
	UsageCondition string `json:"usageCondition,omitempty"`

	/**
	 * Get Reward
	 */
	Reward CouponRewardRequestInterface `json:"reward,omitempty"`

	/**
	 * Visibility of the coupon. Determines who can see or acquire the coupon. (Required)
	 */
	Visibility CouponCreateRequestVISIBILITY `json:"visibility"`

	/**
	 * Timezone for interpreting start and end timestamps. (Required)
	 */
	Timezone CouponCreateRequestTIMEZONE `json:"timezone"`
}

func (cr *CouponCreateRequest) UnmarshalJSON(data []byte) error {
	var raw map[string]json.RawMessage
	err := json.Unmarshal(data, &raw)
	if err != nil {
		return fmt.Errorf("JSON parse error in map: %w", err)
	}

	if raw["acquisitionCondition"] != nil {

		if rawacquisitionCondition, ok := raw["acquisitionCondition"]; ok && rawacquisitionCondition != nil {
			AcquisitionCondition, err := UnmarshalAcquisitionConditionRequest(rawacquisitionCondition)
			if err != nil {
				return fmt.Errorf("JSON parse error in AcquisitionConditionRequest(discriminator): %w", err)
			}
			cr.AcquisitionCondition = AcquisitionCondition
		}

	}

	if raw["barcodeImageUrl"] != nil {

		err = json.Unmarshal(raw["barcodeImageUrl"], &cr.BarcodeImageUrl)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(BarcodeImageUrl): %w", err)
		}

	}

	if raw["couponCode"] != nil {

		err = json.Unmarshal(raw["couponCode"], &cr.CouponCode)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(CouponCode): %w", err)
		}

	}

	if raw["description"] != nil {

		err = json.Unmarshal(raw["description"], &cr.Description)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(Description): %w", err)
		}

	}

	if raw["endTimestamp"] != nil {

		err = json.Unmarshal(raw["endTimestamp"], &cr.EndTimestamp)
		if err != nil {
			return fmt.Errorf("JSON parse error in int64(EndTimestamp): %w", err)
		}

	}

	if raw["imageUrl"] != nil {

		err = json.Unmarshal(raw["imageUrl"], &cr.ImageUrl)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(ImageUrl): %w", err)
		}

	}

	if raw["maxUseCountPerTicket"] != nil {

		err = json.Unmarshal(raw["maxUseCountPerTicket"], &cr.MaxUseCountPerTicket)
		if err != nil {
			return fmt.Errorf("JSON parse error in int32(MaxUseCountPerTicket): %w", err)
		}

	}

	if raw["startTimestamp"] != nil {

		err = json.Unmarshal(raw["startTimestamp"], &cr.StartTimestamp)
		if err != nil {
			return fmt.Errorf("JSON parse error in int64(StartTimestamp): %w", err)
		}

	}

	if raw["title"] != nil {

		err = json.Unmarshal(raw["title"], &cr.Title)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(Title): %w", err)
		}

	}

	if raw["usageCondition"] != nil {

		err = json.Unmarshal(raw["usageCondition"], &cr.UsageCondition)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(UsageCondition): %w", err)
		}

	}

	if raw["reward"] != nil {

		if rawreward, ok := raw["reward"]; ok && rawreward != nil {
			Reward, err := UnmarshalCouponRewardRequest(rawreward)
			if err != nil {
				return fmt.Errorf("JSON parse error in CouponRewardRequest(discriminator): %w", err)
			}
			cr.Reward = Reward
		}

	}

	if raw["visibility"] != nil {

		err = json.Unmarshal(raw["visibility"], &cr.Visibility)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(Visibility): %w", err)
		}

	}

	if raw["timezone"] != nil {

		err = json.Unmarshal(raw["timezone"], &cr.Timezone)
		if err != nil {
			return fmt.Errorf("JSON parse error in string(Timezone): %w", err)
		}

	}

	return nil
}

// MarshalJSON customizes the JSON serialization of the CouponCreateRequest struct.
func (r *CouponCreateRequest) MarshalJSON() ([]byte, error) {

	r.AcquisitionCondition = setDiscriminatorPropertyAcquisitionConditionRequest(r.AcquisitionCondition)

	r.Reward = setDiscriminatorPropertyCouponRewardRequest(r.Reward)

	type Alias CouponCreateRequest
	return json.Marshal(&struct {
		*Alias
	}{
		Alias: (*Alias)(r),
	})
}

// CouponCreateRequestVISIBILITY type
/* Visibility of the coupon. Determines who can see or acquire the coupon. */
type CouponCreateRequestVISIBILITY string

// CouponCreateRequestVISIBILITY constants
const (
	CouponCreateRequestVISIBILITY_UNLISTED CouponCreateRequestVISIBILITY = "UNLISTED"

	CouponCreateRequestVISIBILITY_PUBLIC CouponCreateRequestVISIBILITY = "PUBLIC"
)

// CouponCreateRequestTIMEZONE type
/* Timezone for interpreting start and end timestamps. */
type CouponCreateRequestTIMEZONE string

// CouponCreateRequestTIMEZONE constants
const (
	CouponCreateRequestTIMEZONE_ETC_GMT_MINUS_12 CouponCreateRequestTIMEZONE = "ETC_GMT_MINUS_12"

	CouponCreateRequestTIMEZONE_ETC_GMT_MINUS_11 CouponCreateRequestTIMEZONE = "ETC_GMT_MINUS_11"

	CouponCreateRequestTIMEZONE_PACIFIC_HONOLULU CouponCreateRequestTIMEZONE = "PACIFIC_HONOLULU"

	CouponCreateRequestTIMEZONE_AMERICA_ANCHORAGE CouponCreateRequestTIMEZONE = "AMERICA_ANCHORAGE"

	CouponCreateRequestTIMEZONE_AMERICA_LOS_ANGELES CouponCreateRequestTIMEZONE = "AMERICA_LOS_ANGELES"

	CouponCreateRequestTIMEZONE_AMERICA_PHOENIX CouponCreateRequestTIMEZONE = "AMERICA_PHOENIX"

	CouponCreateRequestTIMEZONE_AMERICA_CHICAGO CouponCreateRequestTIMEZONE = "AMERICA_CHICAGO"

	CouponCreateRequestTIMEZONE_AMERICA_NEW_YORK CouponCreateRequestTIMEZONE = "AMERICA_NEW_YORK"

	CouponCreateRequestTIMEZONE_AMERICA_CARACAS CouponCreateRequestTIMEZONE = "AMERICA_CARACAS"

	CouponCreateRequestTIMEZONE_AMERICA_SANTIAGO CouponCreateRequestTIMEZONE = "AMERICA_SANTIAGO"

	CouponCreateRequestTIMEZONE_AMERICA_ST_JOHNS CouponCreateRequestTIMEZONE = "AMERICA_ST_JOHNS"

	CouponCreateRequestTIMEZONE_AMERICA_SAO_PAULO CouponCreateRequestTIMEZONE = "AMERICA_SAO_PAULO"

	CouponCreateRequestTIMEZONE_ETC_GMT_MINUS_2 CouponCreateRequestTIMEZONE = "ETC_GMT_MINUS_2"

	CouponCreateRequestTIMEZONE_ATLANTIC_CAPE_VERDE CouponCreateRequestTIMEZONE = "ATLANTIC_CAPE_VERDE"

	CouponCreateRequestTIMEZONE_EUROPE_LONDON CouponCreateRequestTIMEZONE = "EUROPE_LONDON"

	CouponCreateRequestTIMEZONE_EUROPE_PARIS CouponCreateRequestTIMEZONE = "EUROPE_PARIS"

	CouponCreateRequestTIMEZONE_EUROPE_ISTANBUL CouponCreateRequestTIMEZONE = "EUROPE_ISTANBUL"

	CouponCreateRequestTIMEZONE_EUROPE_MOSCOW CouponCreateRequestTIMEZONE = "EUROPE_MOSCOW"

	CouponCreateRequestTIMEZONE_ASIA_TEHRAN CouponCreateRequestTIMEZONE = "ASIA_TEHRAN"

	CouponCreateRequestTIMEZONE_ASIA_TBILISI CouponCreateRequestTIMEZONE = "ASIA_TBILISI"

	CouponCreateRequestTIMEZONE_ASIA_KABUL CouponCreateRequestTIMEZONE = "ASIA_KABUL"

	CouponCreateRequestTIMEZONE_ASIA_TASHKENT CouponCreateRequestTIMEZONE = "ASIA_TASHKENT"

	CouponCreateRequestTIMEZONE_ASIA_COLOMBO CouponCreateRequestTIMEZONE = "ASIA_COLOMBO"

	CouponCreateRequestTIMEZONE_ASIA_KATHMANDU CouponCreateRequestTIMEZONE = "ASIA_KATHMANDU"

	CouponCreateRequestTIMEZONE_ASIA_ALMATY CouponCreateRequestTIMEZONE = "ASIA_ALMATY"

	CouponCreateRequestTIMEZONE_ASIA_RANGOON CouponCreateRequestTIMEZONE = "ASIA_RANGOON"

	CouponCreateRequestTIMEZONE_ASIA_BANGKOK CouponCreateRequestTIMEZONE = "ASIA_BANGKOK"

	CouponCreateRequestTIMEZONE_ASIA_TAIPEI CouponCreateRequestTIMEZONE = "ASIA_TAIPEI"

	CouponCreateRequestTIMEZONE_ASIA_TOKYO CouponCreateRequestTIMEZONE = "ASIA_TOKYO"

	CouponCreateRequestTIMEZONE_AUSTRALIA_DARWIN CouponCreateRequestTIMEZONE = "AUSTRALIA_DARWIN"

	CouponCreateRequestTIMEZONE_AUSTRALIA_SYDNEY CouponCreateRequestTIMEZONE = "AUSTRALIA_SYDNEY"

	CouponCreateRequestTIMEZONE_ASIA_VLADIVOSTOK CouponCreateRequestTIMEZONE = "ASIA_VLADIVOSTOK"

	CouponCreateRequestTIMEZONE_ETC_GMT_PLUS_12 CouponCreateRequestTIMEZONE = "ETC_GMT_PLUS_12"

	CouponCreateRequestTIMEZONE_PACIFIC_TONGATAPU CouponCreateRequestTIMEZONE = "PACIFIC_TONGATAPU"
)
