/**
 * LINE Messaging API
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

//go:generate python3 ../../generate-code.py
package messaging_api

import (
	"encoding/json"
	"fmt"
)

// Filter
// Filter for narrowcast

type Filter struct {

	/**
	 * Get Demographic
	 */
	Demographic DemographicFilterInterface `json:"demographic,omitempty"`
}

func (cr *Filter) UnmarshalJSON(data []byte) error {
	var raw map[string]json.RawMessage
	err := json.Unmarshal(data, &raw)
	if err != nil {
		return fmt.Errorf("JSON parse error in map: %w", err)
	}

	if raw["demographic"] != nil {

		if rawdemographic, ok := raw["demographic"]; ok && rawdemographic != nil {
			Demographic, err := UnmarshalDemographicFilter(rawdemographic)
			if err != nil {
				return fmt.Errorf("JSON parse error in DemographicFilter(discriminator): %w", err)
			}
			cr.Demographic = Demographic
		}

	}

	return nil
}

// MarshalJSON customizes the JSON serialization of the Filter struct.
func (r *Filter) MarshalJSON() ([]byte, error) {

	r.Demographic = setDiscriminatorPropertyDemographicFilter(r.Demographic)

	type Alias Filter
	return json.Marshal(&struct {
		*Alias
	}{
		Alias: (*Alias)(r),
	})
}
