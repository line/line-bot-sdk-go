/**
 * LINE Messaging API
 * This document describes LINE Messaging API.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

//go:generate python3 ../../generate-code.py
package messaging_api

import (
	"encoding/json"
)

// VideoMessage
// VideoMessage
// https://developers.line.biz/en/reference/messaging-api/#video-message
type VideoMessage struct {
	Message

	/**
	 * Get QuickReply
	 */
	QuickReply *QuickReply `json:"quickReply,omitempty"`

	/**
	 * Get Sender
	 */
	Sender *Sender `json:"sender,omitempty"`

	/**
	 * Get OriginalContentUrl
	 */
	OriginalContentUrl string `json:"originalContentUrl"`

	/**
	 * Get PreviewImageUrl
	 */
	PreviewImageUrl string `json:"previewImageUrl"`

	/**
	 * Get TrackingId
	 */
	TrackingId string `json:"trackingId,omitempty"`
}

// MarshalJSON customizes the JSON serialization of the VideoMessage struct.
func (r *VideoMessage) MarshalJSON() ([]byte, error) {

	type Alias VideoMessage
	return json.Marshal(&struct {
		*Alias

		Type string `json:"type"`
	}{
		Alias: (*Alias)(r),

		Type: "video",
	})
}
